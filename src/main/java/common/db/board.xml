<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.BoardDAO">

    <resultMap id="boardResultMap" type="kr.ac.kopo.board.vo.BoardVO">
        <id property="boardId" column="BOARD_ID" />
        <result property="boardMemberNo" column="BOARD_MEMBER_NO" />
        <result property="memberNameByBoardMemberNo" column="MEMBER_NAME_BY_BOARD_MEMBER_NO" />
        <result property="boardTitle" column="BOARD_TITLE" />
        <result property="boardContent" column="BOARD_CONTENT" />
        <result property="boardArea" column="BOARD_AREA" />
        <result property="boardCreateDate" column="BOARD_C_DATE" />
        <result property="boardViewCount" column="BOARD_VIEW_COUNT" />
        <result property="boardGoodCount" column="BOARD_GOOD_COUNT" />
        <result property="whosComment" column="WHOS_COMMENT" />
    </resultMap>

	<select id="selectAllBoard" resultMap="boardResultMap">
	    SELECT M1.BOARD_ID
	    	 , M1.BOARD_MEMBER_NO
	    	 , M2.MEMBER_NAME AS MEMBER_NAME_BY_BOARD_MEMBER_NO
	    	 , M1.BOARD_TITLE
	    	 , M1.BOARD_CONTENT
	    	 , M1.BOARD_AREA
	    	 , TO_CHAR(M1.BOARD_C_DATE, 'YYYYMMDD') AS BOARD_C_DATE 
	    	 , M1.BOARD_VIEW_COUNT
	    	 , M1.BOARD_GOOD_COUNT
	    	 , M1.WHOS_COMMENT
		  FROM ON_BOARD M1
		       JOIN ON_MEMBER M2 ON M1.BOARD_MEMBER_NO = M2.MEMBER_NO
		 ORDER BY BOARD_ID DESC
	</select>
	
	<select id="selectBoardByArea" resultMap="boardResultMap">
	    SELECT M1.BOARD_ID
	    	 , M1.BOARD_MEMBER_NO
	    	 , M2.MEMBER_NAME AS MEMBER_NAME_BY_BOARD_MEMBER_NO
	    	 , M1.BOARD_TITLE
	    	 , M1.BOARD_CONTENT
	    	 , M1.BOARD_AREA
	    	 , TO_CHAR(M1.BOARD_C_DATE, 'YYYYMMDD') AS BOARD_C_DATE 
	    	 , M1.BOARD_VIEW_COUNT
	    	 , M1.BOARD_GOOD_COUNT
	    	 , M1.WHOS_COMMENT
		  FROM ON_BOARD M1
		       JOIN ON_MEMBER M2 ON M1.BOARD_MEMBER_NO = M2.MEMBER_NO 
		 WHERE M1.BOARD_AREA = #{boardArea}
		 ORDER BY BOARD_ID DESC
	</select>
	
	<select id="getBoardCountByArea" resultType="int">
	    SELECT COUNT(BOARD_AREA) 
	      FROM ON_BOARD 
	     WHERE BOARD_AREA like #{boardArea}
	</select>

	<insert id="insertBoard">
	    INSERT INTO ON_BOARD (BOARD_ID, BOARD_MEMBER_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_AREA)
		VALUES (SEQ_BOARD_ID.NEXTVAL, #{boardMemberNo}, #{boardTitle}, #{boardContent}, #{boardArea})
	</insert>
	
	<delete id="deleteBoard">
	    DELETE FROM ON_BOARD WHERE BOARD_ID = #{boardId}
	</delete>
	
	<select id="selectBoardById" resultMap="boardResultMap">
	    SELECT * FROM ON_BOARD WHERE BOARD_ID = #{boardId}
	</select>
	
	<update id="viewCountUpById">
		UPDATE ON_BOARD
		   SET BOARD_VIEW_COUNT = BOARD_VIEW_COUNT + 1
		 WHERE BOARD_ID = #{boardId}
	</update>
	
	<update id="goodCountUpById">
		UPDATE ON_BOARD
		   SET BOARD_GOOD_COUNT = BOARD_GOOD_COUNT + 1
		 WHERE BOARD_ID = #{boardId}
	</update>
	
	<select id="getBoardsByAreaWithPagination" resultMap="boardResultMap">
        SELECT * 
        FROM (
            SELECT M1.BOARD_ID
                 , M1.BOARD_MEMBER_NO
                 , M2.MEMBER_NAME AS MEMBER_NAME_BY_BOARD_MEMBER_NO
                 , M1.BOARD_TITLE
                 , M1.BOARD_CONTENT
                 , M1.BOARD_AREA
                 , TO_CHAR(M1.BOARD_C_DATE, 'YYYYMMDD') AS BOARD_C_DATE
                 , M1.BOARD_VIEW_COUNT
                 , M1.BOARD_GOOD_COUNT
                 , M1.WHOS_COMMENT
                 , ROWNUM AS RN
              FROM ON_BOARD M1
                   JOIN ON_MEMBER M2 ON M1.BOARD_MEMBER_NO = M2.MEMBER_NO 
             WHERE M1.BOARD_AREA LIKE #{boardArea}
             ORDER BY M1.BOARD_ID DESC
        )
        WHERE RN BETWEEN #{startRow} AND #{lastRow}
	</select>
	
	<update id="updateBoardById">
	UPDATE ON_BOARD
	   SET BOARD_TITLE = #{boardTitle}, 
	       BOARD_CONTENT = #{boardContent}, 
	       BOARD_AREA = #{boardArea}
	 WHERE BOARD_ID = #{boardId}
	</update>
	
	<insert id="addReply">
	    INSERT INTO ON_BOARD (BOARD_ID, BOARD_MEMBER_NO, BOARD_TITLE, WHOS_COMMENT) 
		VALUES (SEQ_BOARD_ID.NEXTVAL, #{boardMemberNo}, #{boardTitle}, #{whosComment})
	</insert>
	
	<select id="checkLikeExists" resultType="int">
	    SELECT COUNT(*) FROM ON_LIKE WHERE BOARD_ID = #{boardId} AND IP_ADDRESS = #{ipAddress}
	</select>
		
	<insert id="addLike">
	    INSERT INTO ON_LIKE (LIKE_ID, BOARD_ID, IP_ADDRESS) 
	    VALUES (like_id_seq.NEXTVAL, #{boardId}, #{ipAddress})
	</insert>

	<select id="findRepliesByBoardId" resultMap="boardResultMap">
	    SELECT M1.BOARD_ID
	         , M1.BOARD_MEMBER_NO
	         , M2.MEMBER_NAME AS MEMBER_NAME_BY_BOARD_MEMBER_NO
	         , M1.BOARD_TITLE
	         , M1.BOARD_CONTENT
	         , M1.BOARD_AREA
	         , TO_CHAR(M1.BOARD_C_DATE, 'YYYYMMDD') AS BOARD_C_DATE 
	         , M1.BOARD_VIEW_COUNT
	         , M1.BOARD_GOOD_COUNT
	         , M1.WHOS_COMMENT
	      FROM ON_BOARD M1
	           JOIN ON_MEMBER M2 ON M1.BOARD_MEMBER_NO = M2.MEMBER_NO
	     WHERE M1.WHOS_COMMENT = #{boardId}
	     ORDER BY M1.BOARD_ID DESC
	</select>

	
</mapper>